import json
import random

# Расширенные примеры сообщений пользователей
users = [
    "Привет!", "Как дела?", "Расскажи шутку.", "Что такое ИИ?", "Как настроение?",
    "Объясни Python.", "Что такое FastAPI?", "Как работает LoRA?", "Напиши приветствие.",
    "Посоветуй фильм.", "Что нового сегодня?", "Помоги с задачей по математике.",
    "Что такое нейросети?", "Какие языки программирования знать?", "Что такое API?",
    "Как приготовить чай?", "Что такое машинное обучение?", "Расскажи анекдот.",
    "Какая погода?", "Как улучшить код?", "Что почитать для саморазвития?",
    "Как работать с базами данных?", "Что такое Git?", "Объясни цикл for в Python",
    "Как начать изучать ML?", "Посоветуй онлайн-курс", "Как писать тесты для кода?",
    "Что такое HTML и CSS?", "Как работать с JSON в Python?", "Что такое WebSocket?"
]

# Расширенные примеры ответов ассистента
assistants = [
    "Привет! Как твои дела?", "У меня всё хорошо! А у тебя?", 
    "ИИ — это искусственный интеллект, который умеет анализировать и учиться.", 
    "Почему компьютер холодный? Потому что он в режиме сна!", 
    "Python — язык программирования для разных задач.", 
    "FastAPI — это библиотека для создания веб-приложений и API.",
    "LoRA позволяет дообучать часть модели без изменения всех весов.",
    "Рад тебя видеть! Приветствие принято.",
    "Сегодня отличная погода для прогулки!", "Я могу помочь с этим вопросом.",
    "Для фильмов могу посоветовать 'Начало', 'Интерстеллар' или 'Матрица'.",
    "Машинное обучение — раздел ИИ, где модели учатся на данных.",
    "Чай готовят, заливая листья горячей водой и настаивая несколько минут.",
    "Анекдот: Вовочка на уроке…", "Чтобы улучшить код, делай рефакторинг и тестируй функции.",
    "Нейросети — модели, вдохновлённые работой мозга.", 
    "Для программирования полезно знать Python, JavaScript и C++.", 
    "API — интерфейс для взаимодействия программных систем.", 
    "HTML и CSS — базовые технологии для веб-разработки.", 
    "Для работы с JSON в Python используем модуль json.", 
    "WebSocket позволяет обмениваться данными между клиентом и сервером в реальном времени."
]

dataset = []

# Генерация 5000 разнообразных диалогов
for _ in range(5000):
    user_msg = random.choice(users)
    assistant_msg = random.choice(assistants)
    dataset.append({"user": user_msg, "assistant": assistant_msg})

# Сохраняем в JSON
with open("dialogs_5000.json", "w", encoding="utf-8") as f:
    json.dump(dataset, f, ensure_ascii=False, indent=2)

print("Файл dialogs_5000.json с 5000 разнообразными диалогами создан!")
